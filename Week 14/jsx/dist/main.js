/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is not neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/*!******************!*\
  !*** ./main1.js ***!
  \******************/
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _arr = [1, 2, 3];\nfor (var _i = 0; _i < _arr.length; _i++) {\n    var i = _arr[_i];\n    console.log(i);\n}\n\nvar React = function () {\n    function React() {\n        _classCallCheck(this, React);\n    }\n\n    _createClass(React, null, [{\n        key: 'createElement',\n        value: function createElement() {\n            var root = document.createElement('div');\n            return root;\n        }\n    }]);\n\n    return React;\n}();\n\nfunction createElement(type, attributes) {\n    var element = document.createElement(type);\n    for (var name in attributes) {\n        element.setAttribute(name, attributes[name]);\n    }\n\n    for (var _len = arguments.length, children = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        children[_key - 2] = arguments[_key];\n    }\n\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n        for (var _iterator = children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var child = _step.value;\n\n            if (typeof child === 'string') {\n                child = document.createTextNode(child);\n            }\n            element.appendChild(child);\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n            }\n        } finally {\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n\n    return element;\n}\n\nvar a = createElement(\n    'div',\n    { id: 'a' },\n    'Hello World',\n    createElement('span', null),\n    createElement('span', null),\n    createElement(\n        'span',\n        null,\n        '3'\n    )\n);\n\ndocument.body.appendChild(a);\n\n//# sourceURL=webpack://jsx/./main1.js?");
/******/ })()
;